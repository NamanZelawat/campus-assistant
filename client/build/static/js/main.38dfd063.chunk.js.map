{"version":3,"sources":["images/Wallpaper_2.jpg","images/Wallpaper_3.jpg","images/Wallpaper_1.jpg","components/HeaderComponent.js","components/FooterComponent.js","components/LoadingComponent.js","components/HomeComponent.js","components/ProductsComponent.js","components/SearchComponent.js","components/ProductDetailComponent.js","components/UserDetailComponent.js","components/ProfileComponent.js","baseUrl.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/products.js","redux/auth.js","redux/bids.js","redux/users.js","redux/favorites.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","required","val","length","maxLength","len","minLength","validEmail","test","isNumber","isNaN","Number","Registerer","props","isSignedIn","react_default","a","createElement","Fragment","Button","color","outline","onClick","toggleRegister","className","Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isNavOpen","isModalOpen","isRegisterOpen","dropdownOpen","toggleModal","bind","assertThisInitialized","toggleNav","handleLogin","handleLogout","toggle","setState","window","innerWidth","event","loginUser","username","value","password","preventDefault","logoutUser","_this2","Navbar","dark","expand","fixed","NavbarToggler","NavbarBrand","href","Collapse","isOpen","navbar","Nav","NavItem","react_router_dom","to","Dropdown","DropdownToggle","aria-hidden","DropdownMenu","DropdownItem","tag","Link","auth","isAuthenticated","userinfo","admin","user","isLoading","Modal","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","id","name","innerRef","input","lib","model","values","registerUser","email","room","block","hostel","phone","showroom","showfacebook","showphone","facebookProfile","firstname","lastname","text","placeholder","validators","show","messages","select","defaultValue","Row","Col","md","InputGroupAddon","addonType","check","inline","checkbox","Component","Footer","align","Loading","items","altText","src","require","caption","Home","activeIndex","next","previous","goToIndex","onExiting","onExited","scrollTo","animating","nextIndex","newIndex","featuredCards","products","slice","map","product","Card","CardImg","top","width","height","images","CardBody","CardTitle","CardSubtitle","bid","price","max_bid","CardText","description","CardLink","_id","slides","item","CarouselItem","key","alt","CarouselCaption","captionHeader","style","fontWeight","fontSize","Carousel","CarouselIndicators","onClickHandler","CarouselControl","direction","directionText","productsLoading","LoadingComponent","productsErrMess","Products","productsCards","owner","changeSelected","toggleEditModal","toggleDeleteModal","title","Search","cat","onChange","e","options","pos","target","checked","push","i","splice","colors","nameRegex","RegExp","list","category_matched","some","category","search","ListGroupItem","concat","Badge","pill","form","for","sm","xs","defaultChecked","ListGroup","RenderProduct","_ref","CardHeader","incr","approved","views","CardFooter","Intl","DateTimeFormat","year","month","day","hour","minute","hour12","format","Date","parse","createdAt","updatedAt","ProductDetail","increaseView","errMess","isAdmin","UserDetail","Profile","isEditModalOpen","isPasswordModalOpen","togglePasswordModal","original","editUser","newpassword","confirm","editPassword","alert","matchcreds","baseUrl","productsFailed","errmess","payload","addProducts","addUsers","users","usersLoading","editProductdispatch","editUserdispatch","USER","editPasswordDispatch","CREDS","deleteProductdispatch","resp","bidsLoading","bidsFailed","addBids","bids","usersFailed","dispatch","localStorage","removeItem","fetchFavorites","favoritesLoading","bearer","getItem","fetch","headers","Authorization","then","response","ok","error","Error","status","statusText","message","json","favorites","addFavorites","catch","favoritesFailed","requiredNum","maxVal","minVal","Main","isDeleteModalOpen","selectedProduct","handleSubmitEdit","fetchProducts","fetchBids","fetchUsers","editProduct","filter","num","defaultName","HeaderComponent","react_router","location","exact","path","component","HomeComponent","SearchComponent","ProductsComponent","match","params","productId","notFoundErr","undefined","ProductDetailComponent","addToView","_ref3","console","log","selectedUser","UserDetailComponent","_ref4","rest","objectWithoutProperties","assign","render","pathname","from","ProfileComponent","_ref2","userId","FooterComponent","deleteProduct","uniqueName","disabled","multiple","textarea","rows","withRouter","connect","originalViews","JSON","indexOf","setItem","stringify","method","body","Content-Type","postProduct","newProduct","creds","requestLogin","success","token","setTimeout","receiveLogin","newUser","newCreds","st0ringify","postBid","bidderId","amount","newBid","bidder","freezeBid","bidId","sold","postFavorite","credentials","deleteFavorite","arguments","action","objectSpread","newproduct","Auth","Bids","newbid","Users","Favorites","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","App","es","MainComponent","Boolean","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.38dfd063.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Wallpaper_2.109bf96c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Wallpaper_3.c511a19b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Wallpaper_1.24c5e005.jpg\";","import React,{Component} from 'react';\nimport {Navbar, Form, FormGroup, Label, Input, Nav, NavbarToggler,Collapse,NavItem, NavbarBrand, Modal, ModalBody, ModalHeader, Button} from 'reactstrap';\nimport {Dropdown,Row, Col,DropdownItem,DropdownMenu,DropdownToggle, InputGroupAddon} from 'reactstrap';\nimport { NavLink,Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors  } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst ifminLength = (len) => (val) => !(val) || (val.length >= len);\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\nconst isNumber = (val) => !isNaN(Number(val));\n\n  function Registerer(props){\n    if(props.isSignedIn===false)\n    return (\n      <React.Fragment>\n          &nbsp;\n      <Button color=\"warning\" outline onClick={props.toggleRegister}>                    \n     <span className=\"fa fa-user-plus fa-lg\"></span> Register\n     </Button>\n      </React.Fragment>\n    );\n    else return(\n      <React.Fragment>\n      </React.Fragment>\n    );\n  }\n\n  \nclass Header extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n         isNavOpen: false,\n         isModalOpen: false,\n         isRegisterOpen: false,\n         dropdownOpen: false\n           }\n        this.toggleModal=this.toggleModal.bind(this);\n        this.toggleNav=this.toggleNav.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n        this.toggleRegister=this.toggleRegister.bind(this);\n        this.toggle=this.toggle.bind(this);\n    }\n\n    toggle(){\n        this.setState({dropdownOpen: !this.state.dropdownOpen});\n    }\n    toggleNav(){\n        if(window.innerWidth<1200){\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n    }\n\n    toggleRegister(event){\n      this.setState({\n        isRegisterOpen: !this.state.isRegisterOpen\n      });\n\n    }\n\n    handleLogin(event) {\n      this.toggleModal();\n      this.props.loginUser({username: this.username.value, password: this.password.value});\n      event.preventDefault();\n  }\n\n  handleLogout() {\n      this.props.logoutUser();\n  }\n    toggleModal() {\n        this.setState({\n          isModalOpen: !this.state.isModalOpen\n        });\n      }\n\n    render(){\n        return (\n            <React.Fragment>\n                 <Navbar color=\"danger\" dark expand=\"xl\" fixed=\"top\">\n                    <div className=\"container\">\n                     <NavbarToggler onClick={this.toggleNav}></NavbarToggler>\n                     <NavbarBrand className=\"mr-auto text-warning brand\" href=\"/home\">\n                     Click ISM\n                     </NavbarBrand>\n                     <Collapse isOpen={this.state.isNavOpen} navbar>\n                     <Nav navbar>\n                        <NavItem className=\"ml-2\" onClick={this.toggleNav}>\n                            <NavLink className=\"nav-link text-warning\" to=\"/home\">\n                               <span className=\"fa fa-home fa-lg\"/> Home\n                           </NavLink>\n                        </NavItem>\n                        <Dropdown  isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n                            <DropdownToggle color=\"Warning\" >\n                            <div className=\"text-warning\">\n                                <span className=\"fa fa-gift fa-lg\"/> Products\n                                                   &nbsp; <i className=\"fa fa-caret-down fa-sm\" aria-hidden=\"true\"></i>\n\n                                                </div>\n                            </DropdownToggle>\n                            <DropdownMenu>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/books\">Books</DropdownItem>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/bicycles\" >Bicycles</DropdownItem>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/stationary\" >Stationary</DropdownItem>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/electronics\" >Electronic Gadgets</DropdownItem>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/clothes\" >Clothes</DropdownItem>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/sports\" >Sports</DropdownItem>\n                              <DropdownItem onClick={this.toggleNav} tag={Link} to=\"/others\" >Others</DropdownItem>\n                            </DropdownMenu>\n                          </Dropdown>\n                        <NavItem className=\"ml-2\" onClick={this.toggleNav}>\n                            <NavLink className=\"nav-link text-warning\" to=\"/search\">\n                                <span className=\"fa fa-search fa-lg\"/> Search\n                            </NavLink>\n                        </NavItem>\n                        \n\n                            {\n                            (this.props.auth.isAuthenticated)?(\n                            <React.Fragment>\n                                <NavItem onClick={this.toggleNav} className=\"ml-2\">\n                                <NavLink className=\"nav-link text-warning\" to=\"/profile\">\n                                     <span className=\"fa fa-user-circle-o fa-lg\"/> My Profile\n                                </NavLink>\n                                </NavItem>\n                                <NavItem className=\"ml-2\" onClick={this.toggleNav}>\n                                <NavLink className=\"nav-link text-warning\" to=\"/bids\">\n                                   <span className=\"fa fa-heart fa-lg\"/> My favorites\n                                </NavLink>\n                                </NavItem>\n                            </React.Fragment>\n                            ):\n                            (<div/>)\n                        }\n                        {\n                            (this.props.auth.isAuthenticated&&!this.props.auth.userinfo.admin)?(\n                                <React.Fragment>\n                                 <NavItem className=\"ml-2\" onClick={this.toggleNav}>\n                                 <NavLink className=\"nav-link text-warning\" to=\"/upload_product\">\n                                    <span className=\"fa fa-upload fa-lg\"/> Upload item\n                                 </NavLink>\n                                 </NavItem>\n                                 <NavItem className=\"ml-2\" onClick={this.toggleNav}>\n                                 <NavLink className=\"nav-link text-warning\" to=\"/uploads\">\n                                    <span className=\"fa fa-list fa-lg\"/> My uploads\n                                 </NavLink>\n                                 </NavItem>\n                                 </React.Fragment>\n\n                            ):\n                            (<div/>)\n                        }\n                         {\n                            (this.props.auth.isAuthenticated&&this.props.auth.userinfo.admin)?(\n                              <React.Fragment>\n                                <NavItem onClick={this.toggleNav} className=\"ml-2\">\n                                <NavLink className=\"nav-link text-warning\" to=\"/pending\">\n                                     <span className=\"fa fa-clock-o fa-lg\"/> Products pending\n                                </NavLink>\n                                </NavItem>\n                                <NavItem onClick={this.toggleNav} className=\"ml-2\">\n                                <NavLink className=\"nav-link text-warning\" to=\"/stats\">\n                                   <span className=\"fa fa-info-circle fa-lg\"/> Stats\n                                </NavLink>\n                                </NavItem>\n                              </React.Fragment>\n                            ):\n                            (<div/>)\n                        }\n                     </Nav>\n                     <Nav className=\"ml-auto\" navbar>\n                     <NavItem>\n                                    { !this.props.auth.isAuthenticated ?\n                        <Button outline color=\"warning\" onClick={this.toggleModal}>\n                                            <span className=\"fa fa-sign-in fa-lg\"></span> Login\n                                            {this.props.auth.isLoading ?\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\n                                                : null\n                                            }\n                                        </Button>\n                                        :\n                                        <div>\n                                        <div className=\"navbar-text text-warning mr-1\">{this.props.auth.user.username}</div>\n                                        <Button outline color=\"warning\" onClick={this.handleLogout}>\n                                            <span className=\"fa fa-sign-out fa-lg\"></span> Logout\n                                            {this.props.auth.isLoading ?\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\n                                                : null\n                                            }\n                                        </Button>\n                                        </div>\n                                    }\n\n\n                    <Registerer isSignedIn={this.props.auth.isAuthenticated} toggleRegister={()=>{this.toggleRegister()}}/>\n                     </NavItem>\n                      </Nav>\n                     </Collapse>\n                    </div>\n                 </Navbar>\n                 <Modal isOpen={!this.props.auth.isAuthenticated&&this.state.isModalOpen} toggle={this.toggleModal}>\n                     <ModalHeader toggle={this.toggleModal}>\n                         Sign In\n                     </ModalHeader>\n                     <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input}  />\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"warning\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                     </Modal>\n                 <Modal isOpen={this.state.isRegisterOpen} toggle={this.toggleRegister}>\n                     <ModalHeader toggle={this.toggleRegister}>\n                         Register \n                     </ModalHeader>\n                     <ModalBody>\n                     <LocalForm model=\"user\" onSubmit={(values) => {\n                           this.toggleRegister();\n                            this.props.registerUser({\n                              username: values.username,\n                               password: values.password,\n                               email: values.email,\n                               room: values.room,\n                               block: values.block,\n                               hostel: values.hostel,\n                               phone: values.phone,\n                               showroom: values.showroom,\n                               showfacebook: values.showfacebook,\n                               showphone: values.showphone,\n                               facebookProfile: values.facebookProfile,\n                               firstname: values.firstname,\n                               lastname: values.lastname });\n                              }}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Control.text model=\".username\" id=\"username\" name=\"username\" \n                            className=\"form-control\" placeholder=\"Username\" validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\n                            <Errors className=\"text-danger\" model=\".username\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\n                            </FormGroup>\n                            <FormGroup>\n                            <Label htmlFor=\"password\">Password</Label>\n                                <Control.password model=\".password\" id=\"password\" name=\"password\" \n                            className=\"form-control\" placeholder=\"password\" validators={{required,minLength: minLength(6),maxLength:maxLength(20)}} />\n                            <Errors className=\"text-danger\" model=\".password\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 5 characters', maxLength:' Must be 20 characters or less'}}/>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"firstname\">First Name</Label>\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" \n                            className=\"form-control\" placeholder=\"firstname\" validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\n                            <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\n                            </FormGroup>\n                            <FormGroup>    \n                                 <Label htmlFor=\"lastname\">Last Name</Label>\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" \n                            className=\"form-control\" placeholder=\"lastname\" validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\n                            <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\n                            </FormGroup>\n                            <FormGroup>\n                            <Label htmlFor=\"hostel\">Hostel</Label>\n                            <Control.select model=\".hostel\" id=\"hostel\" className=\"form-control\" defaultValue=\"Jasper\">\n                              <option>Jasper</option> <option>Amber</option>\n                              <option>Topaz</option> <option>Sapphire</option>\n                              <option>Diamond</option> <option>Emerald</option>\n                              <option>Ruby</option> <option>Rosaline</option>\n                            </Control.select>\n                            </FormGroup>\n                            <FormGroup>\n                            <Label htmlFor=\"block\">Block</Label>\n                            <Control.select model=\".block\" id=\"block\" className=\"form-control\" defaultValue=\"A\">\n                              <option>A</option> <option>B</option>\n                              <option>C</option> <option>D</option>\n                            </Control.select>\n                            </FormGroup>\n                            <FormGroup>    \n                                 <Label htmlFor=\"room\">Room No.</Label>\n                                <Control.text model=\".room\" id=\"room\" name=\"room\" \n                            className=\"form-control\" placeholder=\"room\" validators={{required,maxLength:maxLength(4),isNumber}} />\n                            <Errors className=\"text-danger\" model=\".room\" show=\"touched\" messages={{required: 'Required',\n                             maxLength:' Must be 4 characters or less',isNumber: ' Must be a number'}}/>\n                            </FormGroup>\n                            <FormGroup>    \n                                 <Label htmlFor=\"email\">E-mail</Label>\n                                <Control.text model=\".email\" id=\"email\" name=\"email\" \n                            className=\"form-control\" placeholder=\"email\" validators={{required,validEmail}} />\n                            <Errors className=\"text-danger\" model=\".email\" show=\"touched\" messages={{required: 'Required',\n                            validEmail: ' Enter a valid email'}}/>\n                            </FormGroup>\n                            <FormGroup>    \n                                 <Label htmlFor=\"phone\">Contact No.</Label>\n                                <Control.text model=\".phone\" id=\"phone\" name=\"phone\" \n                            className=\"form-control\" placeholder=\"phone\" validators={{required,minLength:minLength(10),maxLength: maxLength(10),isNumber}} />\n                            <Errors className=\"text-danger\" model=\".phone\" show=\"touched\" messages={{required: 'Required',\n                             minLength:' Should be a valid 10 digit no.',maxLength:' Donot write country code',isNumber: ' Must be a number'}}/>\n                            </FormGroup>\n                            <FormGroup>    \n                            <Row>\n                                <Col md={12}>\n                                 <Label htmlFor=\"facebookProfile\">Facebook Profile Link (Optional)</Label>\n                                 </Col>\n                                 <Col md={6}>\n                                 <InputGroupAddon addonType=\"prepend\">https://www.facebook.com/</InputGroupAddon>\n                                 </Col>\n                                <Col md={6}>\n                                <Control.text model=\".facebookProfile\" id=\"facebookProfile\" name=\"facebookProfile\" \n                            className=\"form-control\" placeholder=\"facebookProfile\" validators={{minLength: ifminLength(15),maxLength: maxLength(30)}} />\n\n                            <Errors className=\"text-danger\" model=\".facebookProfile\" show=\"touched\" messages={{\n                             minLength:' Should have at least 15 characters, otherwise donot enter this field',maxLength:' Should not exceed 30 characters'}}/>\n                                    </Col>\n                                </Row>\n                            </FormGroup>\n                            <Row>\n                            <Label> Check the info. you want to keep public :</Label>\n                            </Row>\n                            <Row>\n                            <Col md={4}>\n                            <FormGroup check inline>                            \n                            <Control.checkbox model=\".showroom\" id=\"showroom\" name=\"showroom\" \n                            className=\"form-control\"/>\n                            <Label check> Room Info</Label>\n                            </FormGroup>\n                            </Col>\n                            <Col md={4}>\n                            <FormGroup check inline>\n                            <Control.checkbox model=\".showphone\" id=\"showphone\" name=\"showphone\" \n                            className=\"form-control\"/>\n                            <Label check htmlFor=\"showphone\"> Contact No.</Label>\n                            </FormGroup>\n                            </Col>\n                            <Col md={4}>\n                            <FormGroup check inline>\n                            <Control.checkbox model=\".showfacebook\" id=\"showfacebook\" name=\"showfacebook\" \n                            className=\"form-control\"/>\n                            <Label check htmlFor=\"showfacebook\"> Facebook Profile</Label>\n                            </FormGroup>\n                            </Col>\n                            </Row>\n                            <br/>\n                            <FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"warning\">Sign Up</Button>\n                            </FormGroup>\n                        </LocalForm>\n                     </ModalBody>\n                 </Modal>\n                </React.Fragment>\n        );\n    }\n}\n\nexport default Header;","import React,{Component} from 'react';\n\nclass Footer extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n        }\n    }\n\nrender(){\n    return(\n                    <p className=\"footer\" align=\"center\">© Copyright 2019 Chirag Jain IIT (ISM) </p>\n          );\n}\n\n}\n\nexport default Footer;","import React from 'react';\n\nconst Loading = () => {\n    return(\n        <div className=\"col-12 heading justify-content-center loading text-warning\">\n            <br/><br/>\n            <br/><br/>\n            <h1 align=\"center\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-warning\"></span>\n            <br/><br/>\n            Loading ....</h1>\n        </div>\n    );\n};\n\nexport default Loading;","import React,{Component} from 'react';\nimport {\n    Carousel,\n    CarouselItem,\n    CarouselControl,\n    CarouselIndicators,\n    CarouselCaption,\n    Card, CardImg, CardText, CardBody,\n    CardLink, CardTitle, CardSubtitle, Button \n  } from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport Loading from './LoadingComponent';\n  const items = [\n    {\n      id: 1,\n      altText: 'Auction',\n      src: require('../images/Wallpaper_2.jpg'),\n      caption: 'First online bidding platform to sell your stuff'\n    },\n    {\n      id: 2,\n      altText: 'Slide 2',\n      src: require('../images/Wallpaper_3.jpg'),\n      caption: 'Just a click away to buy your favorites'\n    },\n    {\n      id: 3,\n      altText: 'Slide 3',\n      src: require('../images/Wallpaper_1.jpg'),\n      caption: '.......................Sell your stuff and earn money'\n    }\n  ];\n\nclass Home extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = { activeIndex: 0 };\n        this.next = this.next.bind(this);\n        this.previous = this.previous.bind(this);\n        this.goToIndex = this.goToIndex.bind(this);\n        this.onExiting = this.onExiting.bind(this);\n        this.onExited = this.onExited.bind(this);\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0)\n      }\n\n      onExiting() {\n        this.animating = true;\n      }\n    \n      onExited() {\n        this.animating = false;\n      }\n    \n      next() {\n        if (this.animating) return;\n        const nextIndex = this.state.activeIndex === items.length - 1 ? 0 : this.state.activeIndex + 1;\n        this.setState({ activeIndex: nextIndex });\n      }\n    \n      previous() {\n        if (this.animating) return;\n        const nextIndex = this.state.activeIndex === 0 ? items.length - 1 : this.state.activeIndex - 1;\n        this.setState({ activeIndex: nextIndex });\n      }\n    \n      goToIndex(newIndex) {\n        if (this.animating) return;\n        this.setState({ activeIndex: newIndex });\n      }\n    \n      render() {\n        const { activeIndex } = this.state;\n        const featured=this.props.products.slice(0,3);\n        const featuredCards=featured.map((product)=>{\n            return (<div className=\"col-12 col-md-4\">\n          <Card>\n        <CardImg top width=\"100%\" height=\"200\"  src={'/uploads/'+product.images[0].slice(22)} />\n        <CardBody className=\"text-black\">\n          <CardTitle className=\"text-danger\"><b>{product.name}</b></CardTitle>\n          <CardSubtitle className=\"text-success\"><b>{product.bid?(<React.Fragment>Bidding range : <span>&#8377;</span> {product.price} - {product.max_bid}</React.Fragment>):<React.Fragment><span>&#8377;</span> {product.price}</React.Fragment>}</b></CardSubtitle>\n          <CardText>{product.description.slice(0,100)+'....'}</CardText>\n          <CardLink tag={Link} to={\"/products/\"+product._id} className=\"text-center\">\n            <Button className=\"button btn-block\" color=\"info\"><i className=\"fa fa-eye fa-lg\"/>\n                             {' '}&nbsp;View details\n                            </Button>           \n                        </CardLink>\n        </CardBody>\n          </Card>\n          </div>);\n        });\n        const slides = items.map((item) => {\n          return (\n            <CarouselItem\n              className=\"custom-tag\"\n              tag=\"div\"\n              key={item.src}\n              onExiting={this.onExiting}\n              onExited={this.onExited}\n            >\n              <img src={item.src} alt={item.altText} className=\"d-block mx-auto\"/>\n              <CarouselCaption captionHeader={item.caption} className=\"text-danger\" style={{fontWeight: \"bold\", fontSize: \"72\"}}/>\n            </CarouselItem>\n          );\n        });\n    \n        return (\n        <div className=\"container align-self-center\">\n          <div className=\"heading d-none d-md-block\">\n            <style>\n              {\n                `.custom-tag {\n                    width: 100%;\n                    max-height: 500px;\n                  }`\n              }\n            </style>\n            <Carousel\n              activeIndex={activeIndex}\n              next={this.next}\n              previous={this.previous}\n            >\n              <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={this.goToIndex} />\n              {slides}\n              <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={this.previous} className=\"indicator\"/>\n              <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={this.next} className=\"indicator\"/>\n            </Carousel>\n          </div>\n          <div className=\"heading row row-content white-text\">\n         <p>The first website to sell your old as well as new items with bidding allowed, in IIT (ISM). You will find various categories of products here : Stationary, Electronic Gadgets, Bicycles, Books, Clothes, Sports, etc. You will see a list of featured products below, based upon the no. of views </p>\n          <p>So, what are you waiting for, just Register and login to get into the store. Upload your old stuff, kept in your rooms, it may help someone in need. Earn huge profits by allowing auction on your items. Don't miss this opportunity. Just go for it. </p>\n          </div>\n          <div className=\"row row-content white-text justify-content-center\">\n          <div className=\"col-12\">\n          <h3 align=\"center\">Featured Products</h3>\n          </div>\n          <div className=\"card-deck\">\n          {(this.props.productsLoading)?(<Loading />):((this.props.productsErrMess)?(<h3>{this.props.productsErrMess}</h3>):featuredCards)}\n          </div>\n          </div>\n          </div>\n        );\n      }\n    }\n\n\nexport default Home;","import React,{Component} from 'react';\nimport {\n    Card, CardImg, CardText, CardBody,\n    CardLink, CardTitle, CardSubtitle, Button \n  } from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport Loading from './LoadingComponent';\n\nclass Products extends Component {\n\n    render() {\n        const productsCards=this.props.products.map((product)=>{\n            return (<div className=\"col-12 col-md-4\">\n          <Card>\n        <CardImg top width=\"100%\" height=\"200\"  src={'/uploads/'+product.images[0].slice(22)} />\n        <CardBody className=\"text-black\">\n          <CardTitle className=\"text-danger\"><b>{product.name} &nbsp;\n          {(this.props.user.userinfo&&(this.props.user.userinfo._id===product.owner._id))?(<React.Fragment><span onClick={()=>{this.props.changeSelected(product._id); this.props.toggleEditModal(); }} className=\"Option fa fa-pencil\"/>\n                          &nbsp; &nbsp; <span onClick={()=>{this.props.changeSelected(product._id); this.props.toggleDeleteModal();}} className=\"Option fa fa-trash\"/>\n                        </React.Fragment>):(<React.Fragment/>)}\n          </b></CardTitle>\n          <CardSubtitle className=\"text-success\"><b>{product.bid?(<React.Fragment>Bidding range : <span>&#8377;</span> {product.price} - {product.max_bid}</React.Fragment>):<React.Fragment><span>&#8377;</span> {product.price}</React.Fragment>}</b></CardSubtitle>\n          <CardText>{product.description.slice(0,100)+'....'}</CardText>\n          <CardLink tag={Link} to={\"/products/\"+product._id} className=\"text-center\">\n            <Button className=\"button btn-block\" color=\"info\"><i className=\"fa fa-eye fa-lg\"/>\n                             {' '}&nbsp;View details\n                            </Button>           \n                        </CardLink>\n        </CardBody>\n          </Card>\n          </div>);\n        });\n\n        return (\n            <div className=\"container full\">\n            <div className=\"heading row row-content white-text justify-content-center\">\n            <div className=\"col-12\">\n            <h3 align=\"center\">{this.props.title}</h3>\n            </div>\n            <div className=\"card-deck\">\n            {(this.props.productsLoading)?(<Loading />):((this.props.productsErrMess)?(<h3>{this.props.productsErrMess}</h3>):productsCards)}\n            </div>\n            </div>\n            </div>\n           \n        );\n\n    }\n \n\n}\n\nexport default Products;","import React,{Component} from 'react';\nimport { Form,FormGroup,Row,Col,Label, Input, Badge, ListGroupItem, ListGroup } from 'reactstrap';\nimport Loading from './LoadingComponent.js';\nimport {Link} from 'react-router-dom';\n\nclass Search extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            name: '',\n            price: 100000,\n            cat:['Stationary','Electronic Gadgets','Bicycles','Clothes','Sports','Others','Books']\n        }\n        this.onChange=this.onChange.bind(this);\n    }\n\n    onChange(e) {\n        const options = this.state.cat;\n        let pos=-1;\n    \n        if (e.target.checked) {\n            options.push(e.target.value)\n        } else {\n          let i=0;\n          for(; i<options.length; i++){\n              if(options[i]===(e.target.value)) {\n                  pos=i;\n                  break;\n                }\n                else{\n                }\n          }\n          options.splice(pos, 1)\n        }\n        this.setState({ cat: options });\n      }\n\n    componentDidMount() {\n        window.scrollTo(0, 0)\n      }\n      \nrender(){\n    var colors=[\"warning\",\"danger\",\"success\",\"info\",\"secondary\"];\n    var nameRegex=new RegExp(this.state.name, 'i');\n    const list = this.props.products.map((product) => {\n        let category_matched=this.state.cat.some((category)=>(category===product.cat));\n        if(((product.name).search(nameRegex)!==-1)&&((product.price)<=this.state.price)&&category_matched)\n        return (\n            <ListGroupItem key={product._id} className=\"text-black\" >\n                         <Link to={`/products/${product._id}`}>\n                         <b>{`${product.name}  `}</b> \n                         </Link>\n                          <Badge color={colors[product.cat.length%5]} pill> {product.cat}</Badge>\n             {(this.props.user.userinfo&&(this.props.user.userinfo._id===product.owner._id))?(\n             <React.Fragment>&nbsp; &nbsp;<span onClick={()=>{this.props.changeSelected(product._id); this.props.toggleEditModal(); }} className=\"Option fa fa-pencil\"/>\n                {'  '}&nbsp;   &nbsp;        <span onClick={()=>{this.props.changeSelected(product._id); this.props.toggleDeleteModal();}} className=\"Option fa fa-trash\"/>\n                          </React.Fragment>\n             ):(<React.Fragment/>)}\n            \n            <br/> <p className=\"ml-auto text-success\"> <b>{product.bid?(<React.Fragment>Bidding range : <span>&#8377;</span> {product.price} - {product.max_bid}</React.Fragment>):<React.Fragment><span>&#8377;</span> {product.price}</React.Fragment>}</b></p>\n             <p>Owner : {product.owner.firstname+' '+product.owner.lastname}</p>\n            </ListGroupItem>        );\n            else return (<React.Fragment/>);\n    });\n    if (this.props.productsLoading) {\n        return(\n            <div className=\"container loading white-text\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (this.props.productsErrMess) {\n        return(\n            <div className=\"container loading white-text\">\n                <div className=\"row heading\"> \n                    <div className=\"col-12\">\n                        <br/><br/><br/><br/>\n                        <h3>{this.props.productsErrMess}</h3>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else\n    {\n    return(\n        \n        <div className=\"container loading white-text\">\n        <div className=\"row\">\n            <div className=\"col-12 heading\">\n             <h3 align=\"center\">Search your product here : </h3>\n             <Form>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"name\">Name of product</Label>\n              <Input type=\"name\" name=\"name\" id=\"name\" value={this.state.name} onChange={(e)=>{this.setState({name: e.target.value});}} placeholder=\"Enter name of the product\" />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"price\">Maximum you can afford</Label>\n              <Input type=\"price\" name=\"price\" defaultValue=\"100000\" id=\"price\" value={this.state.price}  onChange={(e)=>{this.setState({price: isNaN(Number(e.target.value))?100000:Number(e.target.value)});}} placeholder=\"Enter name of price\" />\n            </FormGroup>\n          </Col>\n        </Row> \n        <Row>\n        <Col sm={6} md={2}>\n            Category : {' '}\n        </Col>\n        </Row>\n        <FormGroup check>\n        <Row>\n        <Col xs={6} md={3}>\n          <Label check for=\"Books\">\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"Books\" value=\"Books\" name=\"cat\" />\n            Books \n          </Label>\n        </Col>\n        <Col xs={6} md={3}>\n          <Label check for=\"Stationary\">\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"Stationary\" value=\"Stationary\" name=\"cat\" />\n            Stationary\n          </Label>\n          </Col>\n\n          <Col xs={6} md={3}>\n          <Label check for=\"Bicycles\">\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"Bicycles\" value=\"Bicycles\" name=\"cat\" />\n            Bicycles\n          </Label>\n          </Col>\n          <Col xs={6} md={3}>\n          <Label check for=\"Electronic Gadgets\">\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"Electronic Gadgets\" value=\"Electronic Gadgets Science\" name=\"cat\" />\n            Electronic Gadgets\n          </Label>\n          </Col>\n          </Row>\n          <Row>\n        <Col xs={6} md={3}>\n          <Label check for=\"Clothes\">\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"Clothes\" value=\"Clothes\" name=\"cat\" />\n            Clothes \n          </Label>\n        </Col>\n        <Col xs={6} md={3}>\n          <Label check for=\"Sports\">\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"Sports\" value=\"Sports\" name=\"cat\" />\n            Sports\n          </Label>\n          </Col>\n          <Col xs={6} md={3}>\n          <Label check for=\"Others\">\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"Others\" value=\"Others\" name=\"cat\" />\n            Others\n          </Label>\n          </Col>\n        </Row>\n        </FormGroup>\n        </Form>\n            </div>\n        </div>\n        <div className=\"row\">\n        <div className=\"col-12\">\n      <br/>\n      <ListGroup>\n      {list}\n      </ListGroup>\n      </div>\n      </div>\n      <br/>\n    </div>\n\n        );\n}\n}\n\n}\n\nexport default Search;","import React,{Component} from 'react';\nimport {Row,Col, Card, CardText, CardHeader, CardFooter, CardBody } from 'reactstrap';\nimport Loading from './LoadingComponent';\nimport {Link} from 'react-router-dom';\nfunction RenderProduct({product,toggleEditModal,changeSelected,user}) {\n    if (product != null)\n        return(\n        <Card>\n       \n       <CardHeader tag=\"h3\" className=\"text-danger\"><b>{product.name}</b> &nbsp; &nbsp; &nbsp;&nbsp;\n       {(user.userinfo&&(user.userinfo._id===product.owner._id))?(<span className=\"fa fa-pencil Option\" onClick={()=>{changeSelected(product._id);toggleEditModal();}}/>):(<React.Fragment/>)}\n       <div className=\"ml-auto text-success\"><b>{product.bid?(<React.Fragment>Bidding range : <span>&#8377;</span> {product.price} - {product.max_bid}</React.Fragment>):<React.Fragment><span>&#8377;</span> {product.price}</React.Fragment>}</b></div>\n        </CardHeader>\n        <CardBody>\n          \n          <CardText>\n              <b> Category: </b> {product.cat} <br/><br/>\n              {product.bid?(<React.Fragment><b>Minimum Increment in bidding price :</b> <span>&#8377;</span> {product.incr}</React.Fragment>):<React.Fragment/>}<br/><br/>\n              <b> Owner : </b> <Link to={`${product._id}/owner`}>{product.owner.firstname+' '+product.owner.lastname}</Link> <br/><br/>\n              <b> Email of owner : </b> {product.owner.email} <br/><br/>\n              <b>Descrption: </b><br/> {product.description} <br/><br/>\n              <b>Approved by admin: </b><br/> {product.approved?'Yes':'No'} <br/><br/>\n              <b> No. of Views: </b> <br/> {product.views} <br/>\n      </CardText><br/>\n        </CardBody>\n        <CardFooter className=\"text-muted\">\n        <Row>\n        <Col md={6}>\n        Created at : {new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'short', day: '2-digit', hour: 'numeric',minute: 'numeric', hour12: true }).format(new Date( Date.parse(product.createdAt)))}    \n        </Col>\n        <Col md={6}>\n        Last updated at : {new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'short', day: '2-digit',hour: 'numeric',minute: 'numeric', hour12: true}).format(new Date( Date.parse(product.updatedAt)))} \n        </Col>\n        </Row>\n        </CardFooter>\n        </Card>\n        );\n    else\n        return(\n            <div></div>\n        );\n        }\n\n\nclass ProductDetail extends Component {\n\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n        if(this.props.product&&this.props.user.isAuthenticated){\n                this.props.increaseView(this.props.product._id,this.props.product.views);\n          }\n      }\n\nrender(){\n  if (this.props.isLoading) {\n    return(\n        <div className=\"container\">\n            <div className=\"row\">            \n                <Loading />\n            </div>\n        </div>\n    );\n}\nelse if (this.props.errMess) {\n    return(\n        <div className=\"container loading\">\n            <div className=\"row heading\"> \n                <div className=\"col-12\">\n                    <br/><br/><br/><br/>\n                    <h3>{this.props.errMess}</h3>\n                </div>\n            </div>\n        </div>\n    );\n}\nelse\n    return(\n\n        <div className=\"container full\">\n        <div className=\"row heading\">\n          <div className=\"col-12\">\n          <br/>        <br/>\n          <RenderProduct product={this.props.product} isAdmin={this.props.isAdmin}\n                    toggleEditModal={this.props.toggleEditModal}\n                    changeSelected={this.props.changeSelected}\n                    user={this.props.user}>\n              </RenderProduct>\n\n        <br/>\n          </div>\n        </div>\n      </div>\n        );\n}\n\n}\n\nexport default ProductDetail;","import React,{Component} from 'react';\nimport {Card,CardBody,CardHeader,CardText} from 'reactstrap';\nimport Loading from './LoadingComponent';\n\nclass UserDetail extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n        }\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0)\n      }\n\n\nrender(){\n    if (this.props.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (this.props.errMess) {\n        return(\n            <div className=\"container loading\">\n                <div className=\"row heading\"> \n                    <div className=\"col-12\">\n                        <br/><br/><br/><br/>\n                        <h3>{this.props.errMess}</h3>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else    \n    return(\n\n        <div className=\"container mt-6 home text-center align-self-center\">\n            <div className=\"row text-center justify-content-center mt-2\">\n            <br/>\n            <Card className=\"heading\">\n                \n        <CardHeader><h3>User Details</h3></CardHeader>\n        <CardBody>\n          <CardText>\n          <h5> First Name : {'          '+this.props.user.firstname}</h5>\n          <h5> Last Name : {'          '+this.props.user.lastname}</h5>\n          <h5> Email : {'          '+this.props.user.email}</h5>\n          <h5> Username : {'          '+this.props.user.username}</h5>\n          {this.props.user.showroom?(<h5> Address : {'Room No.          '+this.props.user.block+'-'+this.props.user.room+ ', '+this.props.user.hostel}</h5>):(<React.Fragment/>)}\n          {this.props.user.showphone?(<h5> Contact No. : {'  +91-'+this.props.user.phone}</h5>):(<React.Fragment/>)}\n          {this.props.user.showfacebook?(<h5> Facebook Profile Link : <a href={'https://www.facebook.com/'+this.props.facebookProfile}><span className=\"fa fa-facebook\"></span></a></h5>):(<React.Fragment/>)}       \n          </CardText>\n        </CardBody>\n          </Card>\n            </div>\n            </div>\n        );\n}\n\n}\n\nexport default UserDetail;","import React,{Component} from 'react';\nimport {Card,CardBody,CardHeader,Label,Row,Col,InputGroupAddon,CardText,Button,Modal,ModalBody,ModalHeader,FormGroup} from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\nconst matchcreds = (original) => (val) =>  (val===original);\nconst ifminLength = (len) => (val) => !(val) || (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\n\nclass Profile extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            isEditModalOpen: false,\n            isPasswordModalOpen: false\n        }\n        this.toggleEditModal=this.toggleEditModal.bind(this);\n        this.togglePasswordModal=this.togglePasswordModal.bind(this);\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0)\n      }\n\n    togglePasswordModal(){\n        this.setState({\n            isPasswordModalOpen: !this.state.isPasswordModalOpen\n        });\n    }\n\n    toggleEditModal(){\n            this.setState({isEditModalOpen: !this.state.isEditModalOpen});\n          }\n      \n\nrender(){\n    if(this.props.auth.userinfo===null){\n        return (\n            <div className=\"row heading\">\n                Failed to fetch. Please reload the page\n            </div>\n        )\n    }\n    return(\n\n        <div className=\"container mt-6 home text-center align-self-center\">\n            <div className=\"row text-center justify-content-center mt-2\">\n            \n            <Card className=\"heading\">\n                \n        <CardHeader><h3>My Profile</h3></CardHeader>\n        <CardBody>\n          <CardText>\n          <h5> First Name : {'          '+this.props.auth.userinfo.firstname}</h5>\n          <h5> Last Name : {'          '+this.props.auth.userinfo.lastname}</h5>\n          <h5> Email : {'          '+this.props.auth.userinfo.email}</h5>\n          <h5> Username : {'          '+this.props.auth.user.username}</h5>\n          <h5> Address : {'Room No.          '+this.props.auth.userinfo.block+'-'+this.props.auth.userinfo.room+ ', '+this.props.auth.userinfo.hostel}</h5>{this.props.auth.userinfo.showroom?(' (Publicly Visible)'):(<React.Fragment/>)}\n          <h5> Contact No. : {'  +91-'+this.props.auth.userinfo.phone}</h5>{this.props.auth.userinfo.showphone?(' (Publicly Visible)'):(<React.Fragment/>)}\n          <h5> Facebook Profile Link : <a href={'https://www.facebook.com/'+this.props.auth.userinfo.facebookProfile}><span className=\"fa fa-facebook\"></span></a></h5>{this.props.auth.userinfo.showfacebook?(' (Publicly Visible)'):(<React.Fragment/>)}\n          \n          </CardText>\n          \n          <Button color=\"info\" onClick={this.toggleEditModal}>Edit &nbsp;{'   '}<span className=\"fa fa-pencil\"/></Button>\n        {' '}\n{this.props.auth.userinfo.admin?<div/>:        <Button color=\"info\" onClick={this.togglePasswordModal}>Change Password &nbsp;{'   '}<span className=\"fa fa-key\"/></Button>}\n\n        </CardBody>\n          </Card>\n            </div>\n            <Modal isOpen={this.state.isEditModalOpen} toggle={this.toggleEditModal}>\n                     <ModalHeader toggle={this.toggleEditModal}>\n                         Edit Profile\n                     </ModalHeader>\n                     <ModalBody>\n                     <LocalForm model=\"user\" onSubmit={(values) => {\n                            this.toggleEditModal();\n                            this.props.editUser(this.props.auth.userinfo._id, values.firstname, values.lastname, values.room, values.email, values.block, values.hostel, values.phone, values.facebookProfile, values.showfacebook, values.showphone, values.showroom );\n                     }}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Control.text model=\".username\" id=\"username\" name=\"username\" \n                            defaultValue={this.props.auth.user.username}\n                            className=\"form-control\" placeholder=\"Username\" validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\n                            <Errors className=\"text-danger\" model=\".username\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"firstname\">First Name</Label>\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" \n                            defaultValue={this.props.auth.userinfo.firstname}\n                            className=\"form-control\" placeholder=\"firstname\" validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\n                            <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\n                            </FormGroup>\n                            <FormGroup>    \n                                 <Label htmlFor=\"lastname\">Last Name</Label>\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" defaultValue={this.props.auth.userinfo.lastname}\n                            className=\"form-control\" placeholder=\"lastname\" validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\n                            <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\n                            </FormGroup>\n                            <FormGroup>\n                            <Label htmlFor=\"hostel\">Hostel</Label>\n                            <Control.select model=\".hostel\" id=\"hostel\" className=\"form-control\" defaultValue={this.props.auth.userinfo.hostel}>\n                              <option>Jasper</option> <option>Amber</option>\n                              <option>Topaz</option> <option>Sapphire</option>\n                              <option>Diamond</option> <option>Emerald</option>\n                              <option>Ruby</option> <option>Rosaline</option>\n                            </Control.select>\n                            </FormGroup>\n                            <FormGroup>\n                            <Label htmlFor=\"block\">Block</Label>\n                            <Control.select model=\".block\" id=\"block\" className=\"form-control\" defaultValue={this.props.auth.userinfo.block}>\n                              <option>A</option> <option>B</option>\n                              <option>C</option> <option>D</option>\n                            </Control.select>\n                            </FormGroup>\n                            <FormGroup>    \n                                 <Label htmlFor=\"room\">Room No.</Label>\n                                <Control.text model=\".room\" id=\"room\" name=\"room\" defaultValue={this.props.auth.userinfo.room}\n                            className=\"form-control\" placeholder=\"room\" validators={{required,maxLength:maxLength(4),isNumber}} />\n                            <Errors className=\"text-danger\" model=\".room\" show=\"touched\" messages={{required: 'Required',\n                             maxLength:' Must be 4 characters or less',isNumber: ' Must be a number'}}/>\n                            </FormGroup>\n                            <FormGroup>    \n                                 <Label htmlFor=\"email\">E-mail</Label>\n                                <Control.text model=\".email\" id=\"email\" name=\"email\" defaultValue={this.props.auth.userinfo.email}\n                            className=\"form-control\" placeholder=\"email\" validators={{required,validEmail}} />\n                            <Errors className=\"text-danger\" model=\".email\" show=\"touched\" messages={{required: 'Required',\n                            validEmail: ' Enter a valid email'}}/>\n                            </FormGroup>\n                            <FormGroup>    \n                                 <Label htmlFor=\"phone\">Contact No.</Label>\n                                <Control.text model=\".phone\" id=\"phone\" name=\"phone\" defaultValue={this.props.auth.userinfo.phone}\n                            className=\"form-control\" placeholder=\"phone\" validators={{required,minLength:minLength(10),maxLength: maxLength(10),isNumber}} />\n                            <Errors className=\"text-danger\" model=\".phone\" show=\"touched\" messages={{required: 'Required',\n                             minLength:' Should be a valid 10 digit no.',maxLength:' Donot write country code',isNumber: ' Must be a number'}}/>\n                            </FormGroup>\n                            <FormGroup>    \n                            <Row>\n                                <Col md={12}>\n                                 <Label htmlFor=\"facebookProfile\">Facebook Profile Link (Optional)</Label>\n                                 </Col>\n                                 <Col md={6}>\n                                 <InputGroupAddon addonType=\"prepend\">https://www.facebook.com/</InputGroupAddon>\n                                 </Col>\n                                <Col md={6}>\n                                <Control.text model=\".facebookProfile\" id=\"facebookProfile\" name=\"facebookProfile\" defaultValue={this.props.auth.userinfo.facebookProfile}\n                            className=\"form-control\" placeholder=\"facebookProfile\" validators={{minLength: ifminLength(15),maxLength: maxLength(30)}} />\n\n                            <Errors className=\"text-danger\" model=\".facebookProfile\" show=\"touched\" messages={{\n                             minLength:' Should have at least 15 characters, otherwise donot enter this field',maxLength:' Should not exceed 30 characters'}}/>\n                                    </Col>\n                                </Row>\n                            </FormGroup>\n                            <Row>\n                            <Label> Check the info. you want to keep public :</Label>\n                            </Row>\n                            <Row>\n                            <Col md={4}>\n                            <FormGroup check inline>                            \n                            <Control.checkbox model=\".showroom\" id=\"showroom\" name=\"showroom\"\n                            defaultValue={this.props.auth.userinfo.showroom} \n                            className=\"form-control\"/>\n                            <Label check> Room Info</Label>\n                            </FormGroup>\n                            </Col>\n                            <Col md={4}>\n                            <FormGroup check inline>\n                            <Control.checkbox model=\".showphone\" id=\"showphone\" name=\"showphone\" \n                            className=\"form-control\" defaultValue={this.props.auth.userinfo.showphone}/>\n                            <Label check htmlFor=\"showphone\"> Contact No.</Label>\n                            </FormGroup>\n                            </Col>\n                            <Col md={4}>\n                            <FormGroup check inline>\n                            <Control.checkbox model=\".showfacebook\" id=\"showfacebook\" name=\"showfacebook\" \n                            className=\"form-control\" defaultValue={this.props.auth.userinfo.showfacebook}/>\n                            <Label check htmlFor=\"showfacebook\"> Facebook Profile</Label>\n                            </FormGroup>\n                            </Col>\n                            </Row>\n                            <br/>\n                            <FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"warning\">Submit</Button>\n                            </FormGroup>\n                        </LocalForm>\n                     </ModalBody>\n               \n          </Modal>\n\n          <Modal isOpen={this.state.isPasswordModalOpen} toggle={this.togglePasswordModal}>\n                     <ModalHeader toggle={this.togglePasswordModal}>\n                         Change Password\n                     </ModalHeader>\n                     <ModalBody>\n                     <LocalForm model=\"passwordform\" onSubmit={(values) => {\n                         if(values.newpassword===values.confirm){\n                               this.togglePasswordModal();\n                               this.props.editPassword(this.props.auth.userinfo._id, this.props.auth.user.username, \n                                values.newpassword);     \n                               }\n                        else {\n                            alert(\"Your passwords didn't match. Please try again\");\n                        }\n                                 }}>\n                            <FormGroup>\n                            <Label htmlFor=\"password\">Current Password</Label>\n                                <Control.password model=\".password\" id=\"password\" name=\"password\" \n                            className=\"form-control\" placeholder=\"password\" validators={{required,minLength: minLength(6),maxLength:maxLength(20),\n                            matchcreds: matchcreds(this.props.auth.user.password)}} />\n                            <Errors className=\"text-danger\" model=\".password\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 5 characters', maxLength:' Must be 20 characters or less',\n                            matchcreds: ' Enter the correct password'}}/>\n                            </FormGroup>\n\n                            <FormGroup>\n                            <Label htmlFor=\"newpassword\">New password</Label>\n                                <Control.password model=\".newpassword\" id=\"newpassword\" name=\"newpassword\" \n                            className=\"form-control\" placeholder=\"New Password\" validators={{required,minLength: minLength(6),maxLength:maxLength(20)\n                            }}  />\n                            <Errors className=\"text-danger\" model=\".newpassword\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 5 characters', maxLength:' Must be 20 characters or less'\n                      }}/>\n                            </FormGroup>\n                            \n                            <FormGroup>\n                            <Label htmlFor=\"confirm\">Confirm Password</Label>\n                                <Control.password model=\".confirm\" id=\"confirm\" name=\"confirm\" \n                            className=\"form-control\"\n                            placeholder=\"Re-enter the new password\" validators={{required,minLength: minLength(6),maxLength:maxLength(20)\n                                 } } />\n                            <Errors className=\"text-danger\" model=\".confirm\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 5 characters', maxLength:' Must be 20 characters or less'\n                       }}/>\n                            </FormGroup>\n                            \n                            <Button type=\"submit\" value=\"submit\" color=\"primary\" >Submit</Button>\n                        </LocalForm>\n                     </ModalBody>               \n          </Modal>\n            </div>\n        );\n}\n\n}\n\nexport default Profile;","export const baseUrl=\"https://lib-manage.herokuapp.com/api/\";\n//export const baseUrl=\"http://localhost:5000/api/\";","import * as ActionTypes from './ActionTypes';\nimport {baseUrl} from '../baseUrl'\n\nexport const addProduct = (product) => ({\n  type: ActionTypes.ADD_PRODUCT,\n  payload: product\n});\n\nexport const postProduct = (name, cat, description, price, bid, max_bid, incr, images) => (dispatch) => {\n    const newProduct = {\n      name: name, cat: cat,\n       description: description, price: price,\n        max_bid: max_bid, bid: bid, \n        incr: incr, images: images\n    };\n    const bearer = 'Bearer ' + localStorage.getItem('token');\n    return fetch(baseUrl + 'products', {\n        method: \"POST\",\n        body: JSON.stringify(newProduct),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Authorization': bearer\n        }\n     //   ,        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(response => { alert('Product added successfully');\n      return  dispatch(addProduct(response));})\n    .catch(error =>  { alert('Your product could not be added\\nError: '+error.message); });\n};\n\nexport const increaseView = (_id,originalViews) => (dispatch) => {\n  let views=JSON.parse(localStorage.getItem(\"viewed\"));\n  if(!views||views.indexOf(_id)===-1){\n    if(views)\n      {\n        views.push(_id);\n      }\n    else views=[_id];\n        localStorage.setItem(\"viewed\",JSON.stringify(views));\n    return fetch(baseUrl + 'products/views/' + _id, {\n      method: \"POST\"\n    //  ,     credentials: 'same-origin'\n      ,      body: JSON.stringify({views: originalViews+1}),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      } })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => (dispatch(editProductdispatch(response))))\n  .catch(error =>  {  \n  alert('Your product could not be edited\\nError: '+error.message); });\n  }\n\n}\n\nexport const editProduct = (_id,name, cat, description, price, bid, max_bid, incr, images) => (dispatch) => {\n\n  const newProduct = {\n    name: name, cat: cat,\n    description: description, price: price,\n     max_bid: max_bid, bid: bid, \n     incr: incr, images: images\n  };\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  return fetch(baseUrl + 'products/' + _id, {\n      method: \"PUT\"\n    //  ,     credentials: 'same-origin'\n      ,      body: JSON.stringify(newProduct),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Authorization': bearer\n      } })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => (dispatch(editProductdispatch(response))))\n  .catch(error =>  {  \n  alert('Your product could not be edited\\nError: '+error.message); });\n};\n\nexport const editPassword = (_id,username,password) => (dispatch) => {\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  return fetch(baseUrl + 'users/password/' + _id, {\n    method: \"PUT\"\n  //  ,     credentials: 'same-origin'\n    ,      body: JSON.stringify({password: password}),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Authorization': bearer\n    } })\n.then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText+'\\n ');\n      error.response = response;\n      throw error;\n    }\n  },\n  error => {\n        throw error;\n  })\n.then(response => response.json())\n.then(response => { \n  let newCreds={username: username, password: password};\n  localStorage.removeItem('creds');\n  localStorage.setItem('creds', JSON.st0ringify(newCreds));\n  alert('Password changed successfully');\n  return dispatch(editPasswordDispatch(newCreds));})\n.catch(error =>  {  \nalert('Your password could not be changed\\nError: '+error.message); });\n}\n\nexport const editUser = (_id, firstname, lastname, room, email, block, hostel, phone, facebookProfile, showfacebook, showphone, showroom) => (dispatch) => {\n  const newUser = {\nfirstname: firstname,\nlastname: lastname,\nroom: room,\nemail: email,\nblock: block,\nhostel: hostel,\nphone: phone,\nfacebookProfile: facebookProfile,\nshowfacebook: showfacebook,\nshowphone: showphone,\nshowroom: showroom\n  };\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  return fetch(baseUrl + 'users/' + _id, {\n      method: \"PUT\"\n    //  ,     credentials: 'same-origin'\n      ,      body: JSON.stringify(newUser),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Authorization': bearer\n      } })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => { \n    localStorage.removeItem('userinfo');\n    localStorage.setItem('userinfo', JSON.stringify(response));\n    return dispatch(editUserdispatch(response));})\n  .catch(error =>  {  \n  alert('Your profile could not be edited\\nError: '+error.message+'\\n May be someone has already registered with that Email ID'); });\n};\n\nexport const deleteProduct = (_id) => (dispatch) => {\n  \n  const bearer = 'Bearer ' + localStorage.getItem('token');    \n  return fetch(baseUrl + 'products/' + _id, {\n      method: \"DELETE\"\n    //  ,       credentials: \"same-origin\"\n      ,       headers: {\n        'Authorization': bearer\n      }\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => dispatch(deleteProductdispatch(response)))\n  .catch(error =>  {alert('Your product could not be deleted\\nError: '+error.message); });\n};\n\nexport const fetchProducts = () => (dispatch) => {\n    dispatch(productsLoading(true));\n    return fetch(baseUrl+'products')\n        .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(products => dispatch(addProducts(products)))\n    .catch(error => dispatch(productsFailed(error.message)));\n}\n\n\nexport const fetchUsers = () => (dispatch) => {\n\n  dispatch(usersLoading(true));\n  return fetch(baseUrl+'users')\n      .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(users => dispatch(addUsers(users)))\n  .catch(error => dispatch(usersFailed(error.message)));\n}\n\n\nexport const productsLoading = () => ({\n    type: ActionTypes.PRODUCTS_LOADING\n});\n\nexport const productsFailed = (errmess) => ({\n    type: ActionTypes.PRODUCTS_FAILED,\n    payload: errmess\n});\n\nexport const addProducts = (products) => ({\n    type: ActionTypes.ADD_PRODUCTS,\n    payload: products\n});\n\nexport const addUsers = (users) => ({\n  type: ActionTypes.ADD_USERS,\n  payload: users\n});\n\nexport const usersLoading = () => ({\n  type: ActionTypes.USERS_LOADING\n});\n\nexport const editProductdispatch = (products) => ({\n  type: ActionTypes.EDIT_PRODUCT,\n  payload: products\n});\n\nexport const freezeProductdispatch = (bid) => ({\n  type: ActionTypes.FREEZE_BID,\n  payload: bid\n});\n\nexport const editUserdispatch = (USER) => ({\n  type: ActionTypes.EDIT_USER,\n  payload: USER\n});\n\nexport const editPasswordDispatch = (CREDS) => ({\n  type: ActionTypes.EDIT_PASSWORD,\n  payload: CREDS\n})\n\nexport const deleteProductdispatch = (resp) => ({\n  type: ActionTypes.DELETE_PRODUCT,\n  payload: resp\n});\n\nexport const requestLogin = (creds) => {\n  return {\n      type: ActionTypes.LOGIN_REQUEST,\n      creds\n  }\n}\n\nexport const receiveLogin = (response) => {\n  return {\n      type: ActionTypes.LOGIN_SUCCESS,\n      token: response.token,\n      userinfo: response.userinfo\n  }\n}\n\nexport const loginError = (message) => {\n  return {\n      type: ActionTypes.LOGIN_FAILURE,\n      message\n  }\n}\n\nexport const loginUser = (creds) => (dispatch) => {\n\n  dispatch(requestLogin(creds));\n  return fetch(baseUrl + 'users/login', {\n      method: 'POST',\n      headers: { \n          'Content-Type':'application/json' \n      },\n      body: JSON.stringify(creds)\n  })\n  .then(response => {\n      if (response.ok) {\n          return response;\n      } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n      }\n      },\n      error => {\n          throw error;\n      })\n  .then(response => response.json())\n  .then(response => {\n      if (response.success) {\n          // If login was successful, set the token in local storage\n          localStorage.setItem('token', response.token);\n          localStorage.setItem('creds', JSON.stringify(creds));\n          localStorage.setItem('viewed', JSON.stringify([]));\n          localStorage.setItem('userinfo', JSON.stringify(response.userinfo));    \n          fetchFavorites();\n          setTimeout(()=>{\n            logoutUser();\n            alert('Your JWT token has expired. \\nPlease log in again to continue.');\n           },3600*1000);\n          // Dispatch the success action\n          dispatch(receiveLogin(response));\n      \n      }\n      else {\n          var error = new Error('Error ' + response.status);\n          error.response = response;\n          throw error;\n      }\n  })\n  .catch(error => {\n    alert(error.message+\"\\n Username and password didn't match\");\n     return dispatch(loginError(error.message));})\n};\n\nexport const registerUser = (creds) => (dispatch) => {\n\n\n  return fetch(baseUrl + 'users/signup', {\n      method: 'POST',\n      headers: { \n          'Content-Type':'application/json' \n      },\n      body: JSON.stringify(creds)\n  })\n  .then(response => {\n      if (response.ok) {\n          return response;\n      } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n      }\n      },\n      error => {\n          throw error;\n      })\n  .then(response => response.json())\n  .then(response => {\n      if (response.success) {\n          // If Registration was successful, alert the user\n          alert('Registration Successful');\n        }\n      else {\n          var error = new Error('Error ' + response.status);\n          error.response = response;\n          throw error;\n      }\n  })\n  .catch(error => alert(error.message+'\\n'+\n      'May be someone has already registered with that username or email \\nTry Entering a new username or email '))\n};\n\nexport const addBid = (bid) => ({\n  type: ActionTypes.ADD_BID,\n  payload: bid\n});\n\nexport const postBid = (productId,bidderId,amount) => (dispatch) => {\n    const newBid = {\n    product: productId,\n    bidder: bidderId,\n    amount: amount \n    };\n    const bearer = 'Bearer ' + localStorage.getItem('token');\n    return fetch(baseUrl + 'bids', {\n        method: \"POST\",\n        body: JSON.stringify(newBid),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Authorization': bearer\n        }\n     //   ,        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(response => { alert('Product bidd successfully');\n      return  dispatch(addBid(response));})\n    .catch(error =>  {\n      alert('Product could not be bidd\\nError: '+error.message+'\\n'); });\n};\n\nexport const freezeBid = (bidId) => (dispatch) => {\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  return fetch(baseUrl + 'bids/' + bidId, {\n      method: \"PUT\"\n    //  ,     credentials: 'same-origin'\n    , headers: {\n        \"Content-Type\": \"application/json\",\n        'Authorization': bearer\n      } ,\n    body : JSON.stringify({sold: true})})\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => { \n    alert('Product returned successfully');\n    return dispatch(freezeProductdispatch(response));})\n  .catch(error =>  {  \n  alert('The product could not be returned\\nError: '+error.message); });\n};\n\nexport const fetchBids = () => (dispatch) => {\n  let bidUrl;\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  bidUrl='bids';\n  dispatch(bidsLoading(true));\n  return fetch(baseUrl+bidUrl,{\n     headers: {\n        'Authorization': bearer\n       }\n  })\n      .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(bids => dispatch(addBids(bids)))\n  .catch(error => dispatch(bidsFailed(error.message)));\n}\n\n\n\nexport const bidsLoading = () => ({\n  type: ActionTypes.BIDS_LOADING\n});\n\nexport const bidsFailed = (errmess) => ({\n  type: ActionTypes.BIDS_FAILED,\n  payload: errmess\n});\n\nexport const addBids = (bids) => ({\n  type: ActionTypes.ADD_BIDS,\n  payload: bids\n});\n\nexport const usersFailed = (errmess) => ({\n  type: ActionTypes.USERS_FAILED,\n  payload: errmess\n});\n\n\nexport const requestLogout = () => {\n  return {\n    type: ActionTypes.LOGOUT_REQUEST\n  }\n}\n\nexport const receiveLogout = () => {\n  return {\n    type: ActionTypes.LOGOUT_SUCCESS\n  }\n}\n\n\nexport const logoutUser = () => (dispatch) => {\n  dispatch(requestLogout())\n  localStorage.removeItem('token');\n  localStorage.removeItem('creds');  \n  localStorage.removeItem('userinfo');  \n  localStorage.removeItem('viewed');\n  dispatch(receiveLogout())\n}\n\nexport const postFavorite = (productId) => (dispatch) => {\n\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n\n  return fetch(baseUrl + 'favorites/' + productId, {\n      method: \"POST\",\n      body: JSON.stringify({\"_id\": productId}),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Authorization': bearer\n      },\n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(favorites => { console.log('Favorite Added', favorites); dispatch(addFavorites(favorites)); })\n  .catch(error => dispatch(favoritesFailed(error.message)));\n}\n\nexport const deleteFavorite = (productId) => (dispatch) => {\n\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n\n  return fetch(baseUrl + 'favorites/' + productId, {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': bearer\n      },\n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(favorites => { console.log('Favorite Deleted', favorites); dispatch(addFavorites(favorites)); })\n  .catch(error => dispatch(favoritesFailed(error.message)));\n};\n\nexport const fetchFavorites = () => (dispatch) => {\n  dispatch(favoritesLoading(true));\n\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n\n  return fetch(baseUrl + 'favorites', {\n      headers: {\n          'Authorization': bearer\n      },\n  })\n  .then(response => {\n      if (response.ok) {\n          return response;\n      }\n      else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n      }\n  },\n  error => {\n      var errmess = new Error(error.message);\n      throw errmess;\n  })\n  .then(response => response.json())\n  .then(favorites => dispatch(addFavorites(favorites)))\n  .catch(error => dispatch(favoritesFailed(error.message)));\n}\n\nexport const favoritesLoading = () => ({\n  type: ActionTypes.FAVORITES_LOADING\n});\n\nexport const favoritesFailed = (errmess) => ({\n  type: ActionTypes.FAVORITES_FAILED,\n  payload: errmess\n});\n\nexport const addFavorites = (favorites) => ({\n  type: ActionTypes.ADD_FAVORITES,\n  payload: favorites\n});","export const PRODUCTS_LOADING = 'PRODUCTS_LOADING';\nexport const PRODUCTS_FAILED = 'PRODUCTS_FAILED';\nexport const ADD_PRODUCTS = 'ADD_PRODUCTS';\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\nexport const EDIT_PRODUCT = 'EDIT_PRODUCT';\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\nexport const EDIT_USER = 'EDIT_USER';\nexport const EDIT_PASSWORD = 'EDIT_PASSWORD';\nexport const BIDS_LOADING = 'BIDS_LOADING';\nexport const BIDS_FAILED = 'BIDS_FAILED';\nexport const ADD_BIDS = 'ADD_BIDS';\nexport const ADD_BID = 'ADD_BID';\nexport const FREEZE_BID = 'FREEZE_BID';\nexport const USERS_LOADING = 'USERS_LOADING';\nexport const USERS_FAILED = 'USERS_FAILED';\nexport const ADD_USERS = 'ADD_USERS';\nexport const FAVORITES_LOADING = 'FAVORITES_LOADING';\nexport const FAVORITES_FAILED = 'FAVORITES_FAILED';\nexport const ADD_FAVORITES = 'ADD_FAVORITES';","import React, {Component} from 'react';\nimport Header from './HeaderComponent.js';\nimport Footer from './FooterComponent.js';\nimport Home from './HomeComponent.js';\nimport Products from './ProductsComponent';\nimport Search from './SearchComponent';\nimport ProductDetail from './ProductDetailComponent';\nimport UserDetail from './UserDetailComponent';\nimport Profile from './ProfileComponent';\nimport {Switch,Route,Redirect, withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {Modal,ModalBody,ModalHeader,Button, Label, Col, Row} from 'reactstrap';\nimport { postProduct, fetchProducts, editProduct, deleteProduct, increaseView, loginUser, logoutUser, \n  registerUser, editUser, editPassword, postBid, freezeBid, fetchBids, fetchUsers, fetchFavorites, postFavorite, deleteFavorite} from '../redux/ActionCreators';\nimport { Control, LocalForm, Errors  } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst requiredNum = (val) => !!(val);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst maxVal = (len) => (val) => !(val) || (val<= len);\nconst multiple = (num) => (val) => !(val) || (val%num===0);\nconst minVal = (len) => (val) => (val) && (val>= len);\nconst isNumber = (val) => !isNaN(Number(val));\n\nconst mapStateToProps= (state)=>{\n  return{\n    products: state.products,\n    auth: state.auth,\n    bids: state.bids,\n    users: state.users,\n    favorites: state.favorites\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProducts: () => { dispatch(fetchProducts())},\n  fetchBids: () =>{ dispatch(fetchBids())},\n  fetchUsers: () => { dispatch(fetchUsers())},\n  increaseView: (_id, originalViews) => dispatch(increaseView(_id, originalViews)),\n  postProduct: (name, cat, description, price, bid, max_bid, incr, images) => dispatch(postProduct(name, cat, description, price, bid, max_bid, incr, images)),\n  editProduct: (_id,name, cat, description, price, bid, max_bid, incr, images) => dispatch(editProduct(_id,name, cat, description, price, bid, max_bid, incr, images)),\n  deleteProduct: (_id) =>  dispatch(deleteProduct(_id)),\n  loginUser: (creds) => dispatch(loginUser(creds)),\n  logoutUser: () => dispatch(logoutUser()),\n  registerUser: (creds) => dispatch(registerUser(creds)),\n  editUser: (_id, firstname, lastname, room, email, block, hostel, phone, facebookProfile, showfacebook, showphone, showroom) => dispatch(editUser(_id, firstname, lastname, room, email, block, hostel, phone, facebookProfile, showfacebook, showphone, showroom)),\n  editPassword : (_id,username,password) => dispatch(editPassword(_id,username,password)),\n  postBid: (productId,bidderId,amount) => (dispatch(postBid(productId,bidderId,amount))),\n  freezeBid: (bidId) => (dispatch(freezeBid(bidId))),\n  fetchFavorites: () => dispatch(fetchFavorites()),\n  postFavorite: (productId) => dispatch(postFavorite(productId)),\n  deleteFavorite: (productId) => dispatch(deleteFavorite(productId))\n});\n\nclass Main extends Component {\n  \n  componentDidMount() {\n    this.props.fetchProducts();\n    if(this.props.auth.isAuthenticated){\n      this.props.fetchBids(!this.props.auth.userinfo.admin);\n    }\n    if(this.props.auth.isAuthenticated&&this.props.auth.userinfo.admin){\n      this.props.fetchUsers();\n    }\n  }\n    constructor(props){\n        super(props);\n        this.state={\n          isDeleteModalOpen: false,\n          isEditModalOpen: false,\n          selectedProduct: null,\n          bid: false,\n        };\n        this.toggleDeleteModal=this.toggleDeleteModal.bind(this);\n        this.toggleEditModal=this.toggleEditModal.bind(this);\n        this.changeSelected=this.changeSelected.bind(this);\n        this.handleSubmitEdit = this.handleSubmitEdit.bind(this);\n        }\n\n      handleSubmitEdit(values) {\n        this.toggleEditModal();\n        this.props.editProduct(this.state.selectedProduct._id,values.name, values.cat, values.description, values.price, values.bid, values.max_bid, values.incr, values.images);     \n        }\n    \n    changeSelected(_id){\n      this.setState({selectedProduct:this.props.products.products.filter((product)=>(product._id===_id))[0]});\n      this.setState({bid: this.props.products.products.filter((p)=>(p._id===_id))[0].bid});\n    }\n\n    toggleDeleteModal(){\n      this.setState({isDeleteModalOpen: !this.state.isDeleteModalOpen})\n    }\n    \n    toggleEditModal(){\n      this.setState({isEditModalOpen: !this.state.isEditModalOpen});\n    }\n\n    render(){\n      const ProductWithId = ({match}) => {\n      let selectedProduct=this.props.products.products.filter((product) => (product._id)===(match.params.productId))[0]\n      let notFoundErr=null;\n      if(selectedProduct===undefined){\n      notFoundErr=(\"\\n\\n Error 404 :  Product not found\");\n      }  \n      return(\n          <ProductDetail product={selectedProduct}\n          isLoading={this.props.products.isLoading}\n          errMess={this.props.products.errMess||notFoundErr}\n          toggleEditModal={this.toggleEditModal}\n          changeSelected={this.changeSelected}\n          increaseView={this.props.increaseView}\n          user={this.props.auth}\n          addToView={this.addToView}\n          />\n          );\n      };\n    \n      const UserWithId = ({match}) => {\n        let selectedUser=this.props.users.users.filter((user) => ((user._id)===(match.params.userId)))[0];\n        let notFoundErr=null;\n        if(selectedUser===undefined){\n        notFoundErr=(\"\\n\\n Error 404 :  User not found\");\n        }  \n        return(\n            <UserDetail user={selectedUser}\n            isLoading={this.props.users.isLoading}\n            errMess={this.props.users.errMess||notFoundErr}\n            /> \n            );\n        };\n   \n        const OwnerProduct = ({match}) => {\n          console.log(match.params.productId);\n          let selectedUser=this.props.products.products.filter((product) => ((product._id)===(match.params.productId)))[0].owner;\n          let notFoundErr=null;\n          if(selectedUser===undefined){\n          notFoundErr=(\"\\n\\n Error 404 :  User not found\");\n          }  \n          return(\n              <UserDetail user={selectedUser}\n              isLoading={this.props.products.isLoading}\n              errMess={this.props.products.errMess||notFoundErr}\n              /> \n              );\n          };\n\n      const PrivateRouteCommon = ({ component: Component, ...rest }) => (\n        <Route {...rest} render={(props) => (\n          this.props.auth.isAuthenticated\n            ? <Component {...props} />\n            : <Redirect to={{\n                pathname: '/home',\n                state: { from: props.location }\n              }} />\n        )} />\n      );\n\n   /*   const PrivateRouteAdmin = ({ component: Component, ...rest }) => (\n        <Route {...rest} render={(props) => (\n          this.props.auth.isAuthenticated&&this.props.auth.userinfo.admin\n            ? <Component {...props} />\n            : <Redirect to={{\n                pathname: '/home',\n                state: { from: props.location }\n              }} />\n        )} />\n      );\n\n      const PrivateRoute = ({ component: Component, ...rest }) => (\n        <Route {...rest} render={(props) => (\n          this.props.auth.isAuthenticated&&!this.props.auth.userinfo.admin\n            ? <Component {...props} />\n            : <Redirect to={{\n                pathname: '/home',\n                state: { from: props.location }\n              }} />\n        )} />\n      );\n*/\n      let uniqueName= (defaultName)=>(val) =>(!this.props.products.products.some((product)=>(product.name===val))||(val===defaultName))\n\n    return ( \n          <div className=\"App\">\n          <Header auth={this.props.auth} \n          loginUser={this.props.loginUser} \n          logoutUser={this.props.logoutUser}\n          registerUser={this.props.registerUser}\n          />\n          <Switch location={this.props.location}>\n                      <Route exact path='/home' component={() => <Home \n                      products={this.props.products.products}\n                      productsLoading={this.props.products.isLoading}\n                      productsErrMess={this.props.products.errMess}/>} />\n                  <Route exact path='/search' component={() => <Search \n                      products={this.props.products.products}\n                      productsLoading={this.props.products.isLoading}\n                      productsErrMess={this.props.products.errMess}\n                      user={this.props.auth}\n                      toggleEditModal={this.toggleEditModal}\n                      toggleDeleteModal={this.toggleDeleteModal}\n                      changeSelected={this.changeSelected}\n              />}\n                />\n\n                      <Route exact path='/books' component={() => <Products\n                      products={this.props.products.products.filter((product)=>(product.cat===\"Books\"))}\n                      title=\"Books\"\n                      productsLoading={this.props.products.isLoading}\n                      productsErrMess={this.props.products.errMess}\n                      user={this.props.auth}\n                      toggleEditModal={this.toggleEditModal}\n                      toggleDeleteModal={this.toggleDeleteModal}\n                      changeSelected={this.changeSelected}/>}/>\n                      \n                      <Route exact path='/stationary' component={() => <Products\n                      products={this.props.products.products.filter((product)=>(product.cat===\"Stationary\"))}\n                      title=\"Stationary\"\n                      productsLoading={this.props.products.isLoading}\n                      productsErrMess={this.props.products.errMess}\n                      user={this.props.auth}\n                      toggleEditModal={this.toggleEditModal}\n                      toggleDeleteModal={this.toggleDeleteModal}\n                      changeSelected={this.changeSelected}/>}/>\n\n<Route exact path='/electronics' component={() => <Products\n                      products={this.props.products.products.filter((product)=>(product.cat===\"Electronic Gadgets\"))}\n                      title=\"Electronic Gadgets\"\n                      productsLoading={this.props.products.isLoading}\n                      productsErrMess={this.props.products.errMess}\n                      user={this.props.auth}\n                      toggleEditModal={this.toggleEditModal}\n                      toggleDeleteModal={this.toggleDeleteModal}\n                      changeSelected={this.changeSelected}/>}/>\n\n<Route exact path='/bicycles' component={() => <Products\n                      products={this.props.products.products.filter((product)=>(product.cat===\"Bicycles\"))}\n                      title=\"Bicycles\"\n                      productsLoading={this.props.products.isLoading}\n                      productsErrMess={this.props.products.errMess}\n                      user={this.props.auth}\n                      toggleEditModal={this.toggleEditModal}\n                      toggleDeleteModal={this.toggleDeleteModal}\n                      changeSelected={this.changeSelected}/>}/>\n\n<Route exact path='/clothes' component={() => <Products\n                      products={this.props.products.products.filter((product)=>(product.cat===\"Clothes\"))}\n                      title=\"Clothes\"\n                      productsLoading={this.props.products.isLoading}\n                      productsErrMess={this.props.products.errMess}\n                      user={this.props.auth}\n                      toggleEditModal={this.toggleEditModal}\n                      toggleDeleteModal={this.toggleDeleteModal}\n                      changeSelected={this.changeSelected}/>}/>\n\n<Route exact path='/sports' component={() => <Products\n                      products={this.props.products.products.filter((product)=>(product.cat===\"Sports\"))}\n                      title=\"Sports\"\n                      productsLoading={this.props.products.isLoading}\n                      productsErrMess={this.props.products.errMess}\n                      user={this.props.auth}\n                      toggleEditModal={this.toggleEditModal}\n                      toggleDeleteModal={this.toggleDeleteModal}\n                      changeSelected={this.changeSelected}/>}/>\n\n<Route exact path='/others' component={() => <Products\n                      products={this.props.products.products.filter((product)=>(product.cat===\"Others\"))}\n                      title=\"Others\"\n                      productsLoading={this.props.products.isLoading}\n                      productsErrMess={this.props.products.errMess}\n                      user={this.props.auth}\n                      toggleEditModal={this.toggleEditModal}\n                      toggleDeleteModal={this.toggleDeleteModal}\n                      changeSelected={this.changeSelected}/>}/>\n                      \n                      <Route exact path='/products/:productId' component={ProductWithId} />\n                      <Route path='/products/:productId/owner' component={OwnerProduct} />\n                      <PrivateRouteCommon exact path='/profile' component={() => <Profile\n                      auth={this.props.auth}\n                      editUser={this.props.editUser} \n                      editPassword={this.props.editPassword}/>}\n                      />\n                  {/*     <PrivateRouteAdmin exact path='/add_product' component={() =>{\n                      <AddProduct\n                      isAdmin={(this.props.auth.userinfo==null)?false:(this.props.auth.userinfo.admin)}\n                      postProduct={this.props.postProduct}\n                      products={this.props.products.products}\n                      productsLoading={this.props.products.isLoading}\n                      productsErrMess={this.props.products.errMess}\n                      />\n                      }>*/}\n{/*                      <PrivateRoute exact path='/profile' component={() => <Profile\n                      auth={this.props.auth}\n                      editUser={this.props.editUser} />}\n/>*/}\n                {/*       <PrivateRoute exact path='/history' component={() => <History\n                      bids={this.props.bids}\n                      auth={this.props.auth}\n                     />}\n                      />\n                       <PrivateRouteAdmin exact path='/logs' component={() => <Log\n                      bids={this.props.bids}\n                     />}\n                      />\n                         <PrivateRouteAdmin exact path='/list_students' component={() => <UserList\n                      users={this.props.users.users.filter((user)=>(!user.admin))}\n                      usersLoading={this.props.users.isLoading}\n                      usersErrMess={this.props.users.errMess}\n                     />}\n                      />\n                         <PrivateRouteAdmin exact path='/list_admins' component={() => <UserList\n                      users={this.props.users.users.filter((user)=>(user.admin))}\n                      usersLoading={this.props.users.isLoading}\n                      usersErrMess={this.props.users.errMess}\n                     />}\n                      />\n                       <PrivateRouteAdmin exact path='/bid' component={() => <Bid\n                      auth={this.props.auth}\n                      products={this.props.products.products}\n                      productsLoading={this.props.products.isLoading}\n                      productsErrMess={this.props.products.errMess}\n                      users={this.props.users.users}\n                      usersLoading={this.props.users.isLoading}\n                      usersErrMess={this.props.users.errMess}\n                      postBid={this.props.postBid}\n                       />} />\n                      <PrivateRouteAdmin exact path='/return' component={() => <Return\n                      bids={this.props.bids}\n                      auth={this.props.auth}\n                      freezeBid={this.props.freezeBid}\n                     />} />*/\n                      <Route path='/users/:userId' component={UserWithId}/>\n                      /*<PrivateRouteAdmin path='/stats' component={() => <Stats\n                      bids={this.props.bids}\n                      products={this.props.products.products}\n                      productsLoading={this.props.products.isLoading}\n                      productsErrMess={this.props.products.errMess}\n                      users={this.props.users.users}\n                      usersLoading={this.props.users.isLoading}\n                      usersErrMess={this.props.users.errMess}\n                      />}/>*/}\n                      <Redirect to=\"/home\"/>\n          </Switch>\n        <Footer/>\n        <Modal isOpen={this.state.isDeleteModalOpen} toggle={this.toggleDeleteModal}>\n                     <ModalHeader toggle={this.toggleDeleteModal}>\n                         Confirm Deletion\n                     </ModalHeader>\n                     <ModalBody>\n                       Product details : <br/><br/>\n                        Name : {this.state.selectedProduct?this.state.selectedProduct.name:''} <br/>\n                        Category : {this.state.selectedProduct?this.state.selectedProduct.cat:''} <br/>\n                        {this.state.selectedProduct?(this.state.selectedProduct.bid?('Bidding Range : '+this.state.selectedProduct.price+' - '+this.state.selectedProduct.max_bid):('Price : '+this.state.selectedProduct.price)):''} <br/> <br/>\n                        Are you sure you wish to delete this product ? <br/><br/>\n         <Button color=\"danger\" onClick={()=>{\n           this.props.deleteProduct(this.state.selectedProduct._id);\n           this.toggleDeleteModal();}}>Yes</Button>{' '}  \n         <Button color=\"warning\" onClick={()=>{\n           this.toggleDeleteModal();\n         }}>No</Button>\n                     </ModalBody>\n          </Modal>\n          {this.state.selectedProduct?(\n                 <Modal isOpen={this.state.isEditModalOpen} toggle={this.toggleEditModal}>\n                     <ModalHeader toggle={this.toggleEditModal}>\n                         Edit a product\n                     </ModalHeader>\n                     <ModalBody>\n                    <LocalForm onSubmit={(values) => this.handleSubmitEdit(values)}>\n                    <Row className=\"form-group\">\n                                <Label htmlFor=\"name\" md={2}>Name </Label>\n                                <Col md={10}>\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\n                                        defaultValue={this.state.selectedProduct.name}\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3),\n                                            uniqueName: uniqueName(this.state.selectedProduct.name)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".name\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            uniqueName: ' There exists a product with this name already'\n                                        }}\n                                     />\n                                </Col>\n                            </Row> \n                            <Row className=\"form-group\">                   \n                            <Col md={4}>\n                            <Control.checkbox model=\".bid\" id=\"bid\" name=\"bid\" \n                            className=\"form-control\" disabled={false}\n                            checked={this.state.bid}\n                            defaultChecked={this.state.bid}\n                            onChange={(e)=>{this.setState({bid: !this.state.bid})}}/>\n                            </Col>\n                            <Col md={8}>\n                            <Label check htmlFor=\"bid\"> Allow Bidding</Label>\n                            </Col>\n                            </Row>\n                            {\n                              (this.state.bid) ? (\n                                <React.Fragment>\n                                <Row className=\"form-group\">\n                                <Label htmlFor=\"price\" md={4}>Minimum Price (in &#8377;) </Label>\n                                <Col md={8}>\n                                    <Control.text model=\".price\" id=\"price\" name=\"price\"\n                                        defaultValue={this.state.selectedProduct.price}\n                                        className=\"form-control\"\n                                        validators={{\n                                            requiredNum, minVal: minVal(10),isNumber\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".price\"\n                                        show=\"touched\"\n                                        messages={{\n                                            requiredNum: ' Required',\n                                            minVal: ' Must be greater than 10 Rs.',\n                                            isNumber: ' Must be a number'\n                                         }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                            <Label htmlFor=\"max_bid\" md={4}>Maximum Price (in &#8377;) </Label>\n                            <Col md={8}>\n                                <Control.text model=\".max_bid\" id=\"max_bid\" name=\"max_bid\"\n                                    defaultValue={this.state.selectedProduct.max_bid}\n                                    className=\"form-control\"\n                                    validators={{\n                                        requiredNum, maxVal: maxVal(100000),isNumber\n                                    }}\n                                     />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".max_bid\"\n                                    show=\"touched\"\n                                    messages={{\n                                        requiredNum: ' Required',\n                                        maxVal: ' Must be less than 100000 Rs.',\n                                        isNumber: ' Must be a number'\n                                     }}\n                                 />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"incr\" md={4}>Minimum Increment (in &#8377;) </Label>\n                            <Col md={8}>\n                                <Control.text model=\".incr\" id=\"incr\" name=\"incr\"\n                                    defaultValue={this.state.selectedProduct.incr}\n                                    className=\"form-control\"\n                                    validators={{\n                                        requiredNum, minVal: minVal(10),maxVal: maxVal(10000),multiple: multiple(10),\n                                        isNumber\n                                    }}\n                                     />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".incr\"\n                                    show=\"touched\"\n                                    messages={{\n                                        requiredNum: ' Required',\n                                        minVal: ' Must be greater than 10 Rs.',\n                                        maxVal: ' Must be less than 10000 Rs.',\n                                        multiple: ' Must be a multiple of 10',\n                                        isNumber: ' Must be a number'\n                                     }}\n                                 />\n                            </Col>\n                        </Row>\n                        </React.Fragment>\n                              ) :\n                              (\n                                <Row className=\"form-group\">\n                                <Label htmlFor=\"price\" md={4}>Price (in &#8377;) </Label>\n                                <Col md={8}>\n                                    <Control.text model=\".price\" id=\"price\" name=\"price\"\n                                        defaultValue={this.state.selectedProduct.price}\n                                        className=\"form-control\"\n                                        validators={{\n                                            requiredNum, minVal: minVal(10),isNumber\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".price\"\n                                        show=\"touched\"\n                                        messages={{\n                                            requiredNum: ' Required',\n                                            minVal: ' Must be greater than 10 Rs.',\n                                            isNumber: ' Must be a number'\n                                         }}\n                                     />\n                                </Col>\n                            </Row>\n                              )\n\n                            }\n\n                                        \n                        <Row className=\"form-group\">\n                            <Col>\n                            <Label htmlFor=\"cat\">Category</Label>\n                            <Control.select model=\".cat\" id=\"cat\" className=\"form-control\" defaultValue={this.state.selectedProduct.cat}>\n                              <option>Stationary</option> <option>Electronic Gadgets</option>\n                              <option>Bicycles</option> <option>Clothes</option>\n                              <option>Sports</option> <option>Books</option> \n                              <option>Others</option>\n                                                          </Control.select>\n                            </Col>\n                        </Row>\n                     \n                        <Row className=\"form-group\">\n                                <Label htmlFor=\"description\" md={2}>Description</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".description\" id=\"description\" name=\"description\"\n                                        rows=\"12\"\n                                        defaultValue={this.state.selectedProduct.description}\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                          <Row>\n                          <Col className=\"ml-auto mr-auto\">\n                        <Button type=\"submit\" className=\"bg-primary\">\n                            Submit\n                        </Button>\n                        </Col>\n                        </Row>\n                    </LocalForm>\n                </ModalBody>\n               \n          </Modal>):(<React.Fragment/>)}\n\n          </div>\n           );     \n    }\n    }\n\n    export default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));\n\n","import * as ActionTypes from './ActionTypes';\n\nconst Products = (state = { isLoading: true,\n    errMess: null,\n    products:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PRODUCTS:\n            return {...state, isLoading: false, errMess: null, products: action.payload};\n\n        case ActionTypes.PRODUCTS_LOADING:\n            return {...state, isLoading: true, errMess: null, products: []}\n\n        case ActionTypes.PRODUCTS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        case ActionTypes.ADD_PRODUCT:\n            var product = action.payload;\n            return { ...state, products: state.products.concat(product)};\n\n        case ActionTypes.EDIT_PRODUCT:\n            var newproduct = action.payload;\n            return { ...state, products: state.products.map((product)=>\n                {\n                if(product._id===newproduct._id)\n                {\n                    return newproduct;\n                }\n            else {\n                    return product;\n            }\n                 })\n                }\n\n        case ActionTypes.DELETE_PRODUCT:\n        var resp = action.payload;\n        return { ...state, products: state.products.filter((product)=>{\n            return product._id!==resp._id}) }\n\n        default:\n            return state;\n    }\n};\nexport default Products;","import * as ActionTypes from './ActionTypes';\n\n// The auth reducer. The starting state sets authentication\n// based on a token being in local storage. In a real app,\n// we would also want a util to check if the token is expired.\nconst Auth = (state = {\n        isLoading: false,\n        isAuthenticated: localStorage.getItem('token') ? true : false,\n        token: localStorage.getItem('token'),\n        user: localStorage.getItem('creds') ? JSON.parse(localStorage.getItem('creds')) : null,\n        userinfo: localStorage.getItem('userinfo') ? JSON.parse(localStorage.getItem('userinfo')) : null,\n        errMess: null\n    }, action) => {\n    switch (action.type) {\n        case ActionTypes.LOGIN_REQUEST:\n            return {...state,\n                isLoading: true,\n                isAuthenticated: false,\n                user: action.creds\n            };\n        case ActionTypes.LOGIN_SUCCESS:\n            return {...state,\n                isLoading: false,\n                isAuthenticated: true,\n                errMess: '',\n                token: action.token,\n                userinfo: action.userinfo\n            };\n        case ActionTypes.LOGIN_FAILURE:\n            return {...state,\n                isLoading: false,\n                isAuthenticated: false,\n                errMess: action.message\n            };\n        case ActionTypes.LOGOUT_REQUEST:\n            return {...state,\n                isLoading: true,\n                isAuthenticated: true\n            };\n            \n        case ActionTypes.LOGOUT_SUCCESS:\n            return {...state,\n                isLoading: false,\n                isAuthenticated: false,\n                token: '',\n                user: null,\n                userinfo: null\n            };\n\n        case ActionTypes.EDIT_USER:\n            return {...state,\n                userinfo: action.payload};\n\n        case ActionTypes.EDIT_PASSWORD:\n            return {\n                ...state,\n                user: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default Auth;","import * as ActionTypes from './ActionTypes';\n\nconst Bids = (state = { isLoading: true,\n    errMess: null,\n    bids:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_BIDS:\n            return {...state, isLoading: false, errMess: null, bids: action.payload};\n\n        case ActionTypes.BIDS_LOADING:\n            return {...state, isLoading: true, errMess: null, bids: []}\n\n        case ActionTypes.BIDS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        case ActionTypes.ADD_BID:\n            var bid = action.payload;\n            return { ...state, bids: state.bids.concat(bid)};\n\n        case ActionTypes.FREEZE_BID:\n            var newbid = action.payload;\n            return { ...state, bids: state.bids.map((bid)=>\n                {\n                if(bid._id===newbid._id)\n                {\n                    return newbid;\n                }\n            else {\n                    return bid;\n            }\n                 })\n                }\n\n        default:\n            return state;\n    }\n};\nexport default Bids;","import * as ActionTypes from './ActionTypes';\n\nconst Users = (state = { isLoading: true,\n    errMess: null,\n    users:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_USERS:\n            return {...state, isLoading: false, errMess: null, users: action.payload};\n\n        case ActionTypes.USERS_LOADING:\n            return {...state, isLoading: true, errMess: null, users: []}\n\n        case ActionTypes.USERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};\nexport default Users;","import * as ActionTypes from './ActionTypes';\n\nconst Favorites = (state = {\n        isLoading: true,\n        errMess: null,\n        favorites: null\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_FAVORITES:\n            return {...state, isLoading: false, errMess: null, favorites: action.payload};\n\n        case ActionTypes.FAVORITES_LOADING:\n            return {...state, isLoading: true, errMess: null, favorites: null};\n\n        case ActionTypes.FAVORITES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, favorites: null};\n\n        default:\n            return state;\n    }\n};\n\nexport default Favorites;","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport  Products  from './products.js';\nimport Auth from './auth.js';\nimport Bids from './bids.js';\nimport Users from './users.js';\nimport Favorites from './favorites.js';\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const ConfigureStore = ()=>{\n    const store=createStore(\n        combineReducers({\n            products: Products,\n            auth: Auth,\n            bids: Bids,\n            users: Users,\n            favorites: Favorites\n        }),\n        composeEnhancers(applyMiddleware(thunk))\n    );\n    return store;\n}","import React from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/store.js'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport './App.css';\n\nconst store= ConfigureStore();\n\nfunction App() {\n  return ( \n    <Provider store={store}>\n    <BrowserRouter>\n      <div className=\"App\">\n       <Main/>\n      </div>\n    </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}